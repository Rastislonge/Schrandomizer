      // instruments -> type
      cJSON *channels = cJSON_GetObjectItem(root, "channels");
      if (channels != NULL && cJSON_IsArray(channels)) {
        printf("Channels found\n");
        int channels_count = cJSON_GetArraySize(channels);
        printf("Number of channels: %d\n", channels_count);
        for (int j = 0; j < channels_count; ++j) {
            cJSON *channel = cJSON_GetArrayItem(channels, j);
            if (channel != NULL) {
              printf("Processing channel %d\n", j);
              cJSON *instruments = cJSON_GetObjectItem(channel, "instruments");
              if (instruments != NULL) {
                printf("Instruments array found in channel %d\n", j);
                const char *instruments_list[] = {
                "chip",
                "FM",
                "spectrum",
                "drumset",
                "harmonics"
                };
                  int random_instrument = rand() % (sizeof(instruments_list) / sizeof(instruments_list[0]));
                  int instruments_count = cJSON_GetArraySize(instruments);
                  printf("Number of instruments: %d\n", instruments_count);
                  for (int i = 0; i < instruments_count; ++i) {
                      cJSON *instrument = cJSON_GetArrayItem(instruments, i);
                      if (instrument != NULL) {
                          cJSON *type = cJSON_GetObjectItem(instrument, "type");
                          if (type != NULL) {
                              printf("New type set: %s\n", instruments_list[random_instrument]);
                              cJSON_SetValuestring(type, instruments_list[random_instrument]);
                          }
                      }
                  }
               }
            }
         }
      }